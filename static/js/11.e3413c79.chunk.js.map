{"version":3,"file":"static/js/11.e3413c79.chunk.js","mappings":"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","sources":["webpack://pro-test/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","webpack://pro-test/./src/components/Login/AuthForm.module.css?8cd9","components/Login/AuthForm.jsx","webpack://pro-test/./src/views/AuthView/AuthView.module.css?196e","views/AuthView/AuthView.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Login\":\"Login_Login__VdlKH\",\"title\":\"Login_title__vcg8P\",\"text\":\"Login_text__J+uOD\",\"txtBold\":\"Login_txtBold__l+MbX\"};","// import { Link } from 'react-router-dom';\n\nimport s from './Login.module.css';\n\nexport default function Login() {\n  return (\n    <div className={s.Login}>\n      <h1 className={s.title}>Pro Test</h1>\n      <p className={s.text}>\n        <span className={s.txtBold}>&#91;</span> We will help you find weak\n        points in knowlrdge so that you can strengrhen it. We will show you what\n        is relevant to know for <span className={s.txtBold}>QA Engineer</span>{' '}\n        and will try to make the learning process more diverse_{' '}\n        <span className={s.txtBold}>&#93;</span>\n      </p>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"AuthForm_Form__KUM+E\",\"firstText\":\"AuthForm_firstText__yRLxm\",\"btnGoogle\":\"AuthForm_btnGoogle__5jjGJ\",\"btnIcon\":\"AuthForm_btnIcon__hp8BK\",\"secondText\":\"AuthForm_secondText__5G5Pg\",\"inputMail\":\"AuthForm_inputMail__xqpBA\",\"inputPassword\":\"AuthForm_inputPassword__iGfjL\",\"message\":\"AuthForm_message__+c-qA\",\"buttonWraper\":\"AuthForm_buttonWraper__PUvog\",\"buttonSignIn\":\"AuthForm_buttonSignIn__lTt2U\",\"buttonSignUp\":\"AuthForm_buttonSignUp__8YISi\"};","import s from './AuthForm.module.css';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  useAddUserMutation,\n  useAuthorizeUserMutation,\n  useAuthorizeUserByGoogleMutation,\n} from '../../redux/authAPI';\nimport { toast } from 'react-toastify';\nimport { setUser } from '../../redux/auth/authReducer';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport Loader from 'components/Loader';\n\nexport default function AuthForm() {\n  const [status, setStatus] = useState(false);\n  const [user, setUserForm] = useState({ email: '', password: '' });\n  const [error, setError] = useState({\n    emailError: 'This is a required field',\n    passwordError: 'This is a required field',\n  });\n  const [dirty, setDirty] = useState({\n    emailDirty: false,\n    passwordDirty: false,\n  });\n  const [formValidity, setFormValidity] = useState('true');\n\n  const { email, password } = user;\n  const { emailError, passwordError } = error;\n  const { emailDirty, passwordDirty } = dirty;\n\n  const dispatch = useDispatch();\n\n  const [registerUser] = useAddUserMutation();\n  const [authorizeUser] = useAuthorizeUserMutation();\n  const [authorizeUserByGoogle] = useAuthorizeUserByGoogleMutation();\n\n  const onInput = e => {\n    setUserForm(prevState => {\n      return {\n        ...prevState,\n        [e.target.id]: e.target.value.trim(),\n      };\n    });\n\n    if (e.target.id === 'password') {\n      if (e.target.value.length !== 0 && e.target.value.length < 8) {\n        setError(prevState => {\n          return {\n            ...prevState,\n            passwordError: 'Password must be not less than 8 symbols',\n          };\n        });\n      } else if (!e.target.value) {\n        setError(prevState => {\n          return {\n            ...prevState,\n            passwordError: 'This is a required field',\n          };\n        });\n      } else {\n        setError(prevState => {\n          return {\n            ...prevState,\n            passwordError: '',\n          };\n        });\n      }\n    }\n\n    if (e.target.id === 'email') {\n      const pattern = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/;\n\n      if (e.target.value) {\n        if (!pattern.test(String(e.target.value).toLowerCase())) {\n          setError(prevState => {\n            return {\n              ...prevState,\n              emailError: 'Incorrect email format',\n            };\n          });\n        } else {\n          setError(prevState => {\n            return {\n              ...prevState,\n              emailError: '',\n            };\n          });\n        }\n      } else {\n        setError(prevState => {\n          return {\n            ...prevState,\n            emailError: 'This is a required field',\n          };\n        });\n      }\n    }\n  };\n\n  const onBlur = e => {\n    switch (e.target.id) {\n      case 'email':\n        setDirty(prevState => {\n          return {\n            ...prevState,\n            emailDirty: true,\n          };\n        });\n        break;\n\n      case 'password':\n        setDirty(prevState => {\n          return {\n            ...prevState,\n            passwordDirty: true,\n          };\n        });\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValidity(false);\n    } else {\n      setFormValidity(true);\n    }\n  }, [emailError, passwordError]);\n\n  const onLogin = () => {\n    if (!user?.email && !user?.password) {\n      toast.warn('Please enter your email and password');\n      return;\n    }\n    setStatus(true);\n    authorizeUser(user)\n      .unwrap()\n      .then(data => {\n        dispatch(\n          setUser({\n            avatar: data.user.avatar,\n            email: data.user.email,\n            token: data.user.token,\n          })\n        );\n        setUserForm({\n          email: '',\n          password: '',\n        });\n        setStatus(false);\n        toast.success('Welcome to Pro-Test');\n      })\n      .catch(error => {\n        toast.error(error.data.message);\n        setStatus(false);\n      });\n  };\n\n  const onRegister = () => {\n    if (!user?.email && !user?.password) {\n      toast.warn('Please enter email and password for registration');\n      return;\n    }\n    registerUser(user)\n      .unwrap()\n      .then(() =>\n        authorizeUser(user)\n          .unwrap()\n          .then(data => {\n            dispatch(\n              setUser({\n                avatar: data.user.avatar,\n                email: data.user.email,\n                token: data.user.token,\n              })\n            );\n            setUserForm({\n              email: '',\n              password: '',\n            });\n            setStatus(false);\n          })\n      )\n      .catch(error => {\n        toast.error(error.data.message);\n        setStatus(false);\n      });\n  };\n\n  const googleLogins = useGoogleLogin({\n    onSuccess: async ({ code }) => {\n      authorizeUserByGoogle({ code })\n        .unwrap()\n        .then(data => {\n          dispatch(\n            setUser({\n              avatar: data.user.avatar,\n              email: data.user.email,\n              token: data.user.token,\n            })\n          );\n        })\n        .catch(data => {\n          toast.error(data.message, {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        });\n    },\n    flow: 'auth-code',\n  });\n\n  return (\n    <div className={s.Form}>\n      {status && <Loader />}\n      <p className={s.firstText}>You can use Google Account to authorize:</p>\n      <button className={s.btnGoogle} onClick={googleLogins}>\n        <svg className={s.btnIcon} width=\"18\" height=\"18\">\n          <use href=\"../../img/symbol-defs.svg#icon-google\"></use>\n        </svg>\n        Google\n      </button>\n      <p className={s.secondText}>\n        Or login to our app using e-mail and password:\n      </p>\n      <form>\n        <label className={s.label}>\n          <input\n            className={s.inputMail}\n            type=\"email\"\n            placeholder=\"E-mail\"\n            required\n            id=\"email\"\n            value={email}\n            onChange={onInput}\n            onBlur={onBlur}\n            name=\"email\"\n          />\n          {emailDirty && emailError && (\n            <p className={s.message}>{emailError}</p>\n          )}\n        </label>\n        <label className={s.label}>\n          <input\n            className={s.inputPassword}\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            id=\"password\"\n            value={password}\n            onChange={onInput}\n            onBlur={onBlur}\n            name=\"password\"\n          />\n          {passwordDirty && passwordError && (\n            <p className={s.message}>{passwordError}</p>\n          )}\n        </label>\n        <div className={s.buttonWraper}>\n          <button\n            className={s.buttonSignIn}\n            type=\"button\"\n            onClick={onLogin}\n            disabled={!formValidity}\n          >\n            Sign in\n          </button>\n          <button\n            className={!formValidity ? s.btnSubmitDisabled : s.buttonSignUp}\n            type=\"button\"\n            onClick={onRegister}\n            disabled={!formValidity}\n          >\n            Sign up\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"AuthView\":\"AuthView_AuthView__rgZME\",\"container\":\"AuthView_container__Frqen\"};","import Login from 'components/Login/Login';\nimport AuthForm from 'components/Login/AuthForm';\nimport s from './AuthView.module.css';\n// import Container from 'components/Container';\n\nexport default function AuthView() {\n  return (\n    <>\n      <div className={s.container}>\n        <div className={s.AuthView}>\n          {/* <Container> */}\n          <Login />\n          <AuthForm />\n          {/* </Container> */}\n        </div>\n      </div>\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Login","className","s","AuthForm","useState","status","setStatus","email","password","user","setUserForm","emailError","passwordError","error","setError","emailDirty","passwordDirty","dirty","setDirty","formValidity","setFormValidity","dispatch","useDispatch","useAddUserMutation","registerUser","useAuthorizeUserMutation","authorizeUser","useAuthorizeUserByGoogleMutation","authorizeUserByGoogle","onInput","e","prevState","target","id","value","trim","length","test","String","toLowerCase","onBlur","useEffect","googleLogins","useGoogleLogin","onSuccess","code","unwrap","then","data","setUser","avatar","token","catch","toast","message","position","flow","Loader","onClick","width","height","href","type","placeholder","required","onChange","name","disabled","AuthView","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}
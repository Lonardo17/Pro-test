{"version":3,"file":"static/js/702.1f09ce3d.chunk.js","mappings":"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","sources":["redux/answers/answersSelectors.js","redux/testType/testTypeSelector.js","webpack://pro-test/./src/views/ResultView/ResultViews.module.css?c1f0","webpack://pro-test/./src/components/ResultPage/Graphic/Graphic.module.css?b547","components/ResultPage/Graphic/Graphic.jsx","webpack://pro-test/./src/components/ResultPage/GraphicMobile/GraphicMobile.module.css?876e","components/ResultPage/GraphicMobile/GraphicMobile.jsx","webpack://pro-test/./src/components/ResultPage/ResultGraphic/ResultGraphic.module.css?06e9","components/ResultPage/ResultGraphic/ResultGraphic.jsx","webpack://pro-test/./src/components/ResultPage/ResultMotivation/ResultMotivation.module.css?6506","components/ResultPage/ResultMotivation/ResultMotivation.jsx","services/resultAPI.js","views/ResultView/ResultViews.js"],"sourcesContent":["export const answersSelector = state => state.answers;\n","export const testTypeSelector = state => state.testType;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResultViews_container__dyK1J\"};","// extracted by mini-css-extract-plugin\nexport default {\"graphic\":\"Graphic_graphic__+OdWt\",\"labelNumber\":\"Graphic_labelNumber__OeyKF\",\"square\":\"Graphic_square__BDaVv\"};","import s from './Graphic.module.css';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst COLORS = ['#FF6B01', '#D7D7D7'];\n\nconst RADIAN = Math.PI / 180;\nconst theme = localStorage.getItem('theme');\n\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  value,\n  fill,\n  name,\n}) => {\n  const sin = Math.sin(-RADIAN * midAngle);\n\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius - 20) * cos;\n  const sy = cy + (innerRadius + 70) * sin;\n  const mx = cx + (outerRadius + 10) * cos;\n  const my = cy + (outerRadius - 10) * sin;\n  const ex = mx + (cos >= 0 ? 3 : -3) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <>\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke=\"#00000081\"\n        fill=\"none\"\n      />\n      <circle cx={sx} cy={sy} r={3} fill=\"#FFFFFF\" stroke=\"none\" />\n\n      <text\n        x={ex + (cos >= 0 ? 3 : -3) * 15}\n        y={ey + (cos >= 0 ? 0.5 : 0.5) * 12}\n        fill={theme === 'dark' ? '#FFFFFF' : '#000000'}\n        textAnchor={textAnchor}\n        className={s.labelNumber}\n      >\n        {`${value}% ${name}`}\n      </text>\n\n      <rect\n        fill={fill}\n        width=\"25\"\n        height=\"25\"\n        x={ex + (cos >= 0 ? 1 : -3) * 12}\n        y={ey + (cos >= 0 ? -1 : -1) * 12}\n      />\n    </>\n  );\n};\n\nexport default function Graphic({ percentCorrect, percentIncorrect }) {\n  const data = [\n    { name: 'Correct', value: 40 },\n    { name: 'Incorrect', value: 60 },\n  ];\n  return (\n    <PieChart width={768} height={286} className={s.graphic}>\n      <Pie\n        data={data}\n        cx={384}\n        cy={138}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={142.5}\n        fill=\"#8884d8\"\n        stroke=\"none\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"graphic\":\"GraphicMobile_graphic__3YX4J\",\"label\":\"GraphicMobile_label__Qakcm\",\"labelNumber\":\"GraphicMobile_labelNumber__RwmF9\",\"square\":\"GraphicMobile_square__4uo3L\"};","import s from './GraphicMobile.module.css';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst COLORS = ['#FF6B01', '#D7D7D7'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  fill,\n  value,\n  name,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <>\n      <text\n        x={x}\n        y={y}\n        textAnchor={x > cx ? 'start' : 'end'}\n        dominantBaseline=\"central\"\n        className={s.label}\n      >\n        {`${value}%`}\n      </text>\n      <text\n        x={x}\n        y={y + 8}\n        textAnchor={x > cx ? 'start' : 'end'}\n        dominantBaseline=\"central\"\n        className={s.label}\n      >\n        {`${name}`}\n      </text>\n    </>\n  );\n};\n\nexport default function GraphicMobile({ percentCorrect, percentIncorrect }) {\n  const data = [\n    { name: 'Correct', value: Number(percentCorrect) },\n    { name: 'Incorrect', value: Number(percentIncorrect) },\n  ];\n\n  return (\n    <PieChart width={320} height={160} className={s.graphic}>\n      <Pie\n        data={data}\n        cx={160}\n        cy={75}\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={78}\n        fill=\"#8884d8\"\n        stroke=\"none\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ResultGraphic_title__swo-3\",\"typeTest\":\"ResultGraphic_typeTest__WUUYz\",\"line\":\"ResultGraphic_line__TGcVr\",\"containerResult\":\"ResultGraphic_containerResult__KS5qH\",\"result\":\"ResultGraphic_result__ZfZo4\",\"horizonLine\":\"ResultGraphic_horizonLine__eWLum\"};","import Graphic from '../Graphic';\nimport GraphicMobile from '../GraphicMobile';\nimport { useSelector } from 'react-redux';\nimport { testTypeSelector } from 'redux/testType/testTypeSelector';\nimport s from './ResultGraphic.module.css';\n\nexport default function ResultGraphic({ result }) {\n  const width = window.innerWidth;\n\n  const testType = useSelector(testTypeSelector);\n\n  function getTitleOfTest() {\n    const array = testType.split('');\n    return array\n      .map((char, index) => {\n        if (index === 0) {\n          return char.toUpperCase();\n        } else if (char === '_') {\n          return ' ';\n        } else {\n          return char;\n        }\n      })\n      .join('');\n  }\n\n  const percentCorrect = Math.floor((result * 100) / 12);\n  const percentIncorrect = Math.floor(100 - percentCorrect);\n\n  return (\n    <div>\n      <h2 className={s.title}>Results</h2>\n      <p className={s.typeTest}>[ {getTitleOfTest(testType)}_ ]</p>\n      <hr className={s.line}></hr>\n      {width > 767 ? (\n        <Graphic\n          percentCorrect={percentCorrect}\n          percentIncorrect={percentIncorrect}\n        />\n      ) : (\n        <GraphicMobile\n          percentCorrect={percentCorrect}\n          percentIncorrect={percentIncorrect}\n        />\n      )}\n      <div className={s.containerResult}>\n        <p className={s.result}>\n          Correct answers-<b>{result}</b>\n        </p>\n        <hr className={s.horizonLine}></hr>\n        <p className={s.result}>\n          Total questions-<b>12</b>\n        </p>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResultMotivation_container__Wo+yY\",\"resultText\":\"ResultMotivation_resultText__wt3iy\",\"motivationText\":\"ResultMotivation_motivationText__KWBD2\",\"button\":\"ResultMotivation_button__3VvdV\",\"image\":\"ResultMotivation_image__AvhKD\"};","import s from './ResultMotivation.module.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { resetAnswers } from 'redux/answers/answersSlice';\nimport cat from './cat.png';\nimport cat2x from './cat2x.png';\nimport sadCat from './sadCat.png';\nimport sadCat2x from './sadCat2x.png';\nimport winnerCat from './winnerCat.png';\nimport winnerCat2x from './winnerCat2x.png';\n\nconst ResultMotivation = ({ testType, result }) => {\n  const dispatch = useDispatch();\n\n  function handleFinishTest() {\n    dispatch(resetAnswers());\n    localStorage.setItem('questions', null);\n    localStorage.setItem('currentQIndex', 0);\n    localStorage.setItem('chosenAnswer', null);\n  }\n\n  const replaceCat = () => {\n    if (result <= 4) {\n      return (\n        <>\n          <img\n            srcSet={(`${sadCat} 1x`, `${sadCat2x} 2x`)}\n            src={sadCat}\n            alt=\"sad cat\"\n            className={s.image}\n          />\n          <p className={s.resultText}>Oops!</p>\n          <p className={s.motivationText}>\n            You should prepare better for the test.\n          </p>\n        </>\n      );\n    }\n    if (result === 12) {\n      return (\n        <>\n          <img\n            srcSet={(`${winnerCat} 1x`, `${winnerCat2x} 2x`)}\n            src={winnerCat}\n            alt=\"winner cat\"\n            className={s.image}\n          />\n          <p className={s.resultText}>Excellent!</p>\n          <p className={s.motivationText}>You know the material 100%.</p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <img\n            srcSet={`${cat} 1x, ${cat2x} 2x`}\n            src={cat}\n            alt=\"cat\"\n            className={s.image}\n          />\n          <p className={s.resultText}>Not bad!</p>\n          <p className={s.motivationText}>\n            But you still need to learn some materials.\n          </p>\n        </>\n      );\n    }\n  };\n\n  const resultCat = replaceCat();\n\n  return (\n    <div className={s.container}>\n      {resultCat}\n      <Link\n        to={`/test/${testType}`}\n        className={s.button}\n        onClick={handleFinishTest}\n      >\n        Try again\n      </Link>\n    </div>\n  );\n};\n\nexport default ResultMotivation;\n","import axios from 'axios';\n// import { result } from 'utils/constants';\nconst BASE_URL = 'https://app-protest.herokuapp.com/test';\n\nexport const getResult = async body => \n  await axios.post(`${BASE_URL}/result`, body);\n","import s from './ResultViews.module.css';\nimport ResultGraphic from '../../components/ResultPage/ResultGraphic';\nimport ResultMotivation from '../../components/ResultPage/ResultMotivation';\nimport { useSelector } from 'react-redux';\nimport { answersSelector } from 'redux/answers/answersSelectors';\nimport { useEffect, useState } from 'react';\nimport { getResult } from 'services/resultAPI';\nimport { testTypeSelector } from 'redux/testType/testTypeSelector';\nimport { useDispatch, } from 'react-redux';\nimport { resetHuman } from 'redux/human/humanSlices';\nimport Loader from 'components/Loader';\n\nconst ResultPage = () => {\n  const answers = useSelector(answersSelector);\n  const testType = useSelector(testTypeSelector);\n  const [result, setResult] = useState(0);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  dispatch(resetHuman())\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getResult({\n      answers: JSON.stringify(answers),\n      testType: testType,\n    })\n      .then(response => setResult(response.data.result))\n      .finally(() => setIsLoading(false));\n    return () => {};\n  }, [answers, testType]);\n\n  return (\n    <div className={s.container}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <ResultGraphic result={result} />\n          <ResultMotivation testType={testType} result={result} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ResultPage;\n"],"names":["answersSelector","state","answers","testTypeSelector","testType","COLORS","RADIAN","Math","PI","theme","localStorage","getItem","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","value","fill","name","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","d","stroke","r","x","y","className","s","width","height","Graphic","percentCorrect","percentIncorrect","data","PieChart","Pie","labelLine","label","dataKey","map","entry","index","Cell","length","radius","dominantBaseline","GraphicMobile","Number","ResultGraphic","result","window","innerWidth","useSelector","floor","split","char","toUpperCase","join","dispatch","useDispatch","resultCat","srcSet","sadCat","sadCat2x","src","alt","winnerCat","winnerCat2x","cat","cat2x","to","onClick","resetAnswers","setItem","getResult","body","axios","useState","setResult","isLoading","setIsLoading","resetHuman","useEffect","JSON","stringify","then","response","finally","Loader"],"sourceRoot":""}
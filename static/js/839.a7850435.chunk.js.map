{"version":3,"file":"static/js/839.a7850435.chunk.js","mappings":"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","sources":["redux/answers/answersSelectors.js","redux/testType/testTypeSelector.js","webpack://pro-test/./src/components/TestHeader/TestHeader.module.css?55bb","components/TestHeader/TestHeader.jsx","services/testAPI.js","webpack://pro-test/./src/views/TestView/TestView.module.css?00d9","webpack://pro-test/./src/components/TestQuestion/TestQuestion.module.css?2250","utils/customFormThemes.js","webpack://pro-test/./src/components/RadioButton/RadioButton.module.css?9a86","components/RadioButton/RadioButton.jsx","components/TestQuestion/TestQuestion.jsx","webpack://pro-test/./src/components/TestForm/TestForm.module.css?f066","components/TestForm/TestForm.jsx","views/TestView/TestView.jsx"],"sourcesContent":["export const answersSelector = state => state.answers;\n","export const testTypeSelector = state => state.testType;\n","// extracted by mini-css-extract-plugin\nexport default {\"testHeader\":\"TestHeader_testHeader__zgkDN\",\"testTitle\":\"TestHeader_testTitle__Nzbh9\",\"finishTestBtn\":\"TestHeader_finishTestBtn__XCvdI\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { resetAnswers } from 'redux/answers/answersSlice';\nimport { testTypeSelector } from 'redux/testType/testTypeSelector';\nimport { resetTestType } from 'redux/testType/testTypeSlice';\nimport path from 'utils/router';\nimport s from './TestHeader.module.css';\nconst { home } = path;\nexport default function TestHeader() {\n  const testType = useSelector(testTypeSelector);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  function getTitleOfTest() {\n    const array = testType.split('');\n    return array\n      .map((char, index) => {\n        if (index === 0) {\n          return char.toUpperCase();\n        } else if (char === '_') {\n          return ' ';\n        } else {\n          return char;\n        }\n      })\n      .join('');\n  }\n\n  function handleFinishTest() {\n    dispatch(resetAnswers());\n    dispatch(resetTestType());\n    localStorage.setItem('questions', null);\n    localStorage.setItem('currentQIndex', 0);\n    navigate(home, { replace: true });\n  }\n\n  return (\n    <div className={s.testHeader}>\n      <p className={s.testTitle}>[ {getTitleOfTest(testType)}_ ]</p>\n      <button\n        type=\"button\"\n        className={s.finishTestBtn}\n        onClick={handleFinishTest}\n      >\n        Finish Test\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { techTest, theoryTest } from 'utils/constants';\nconst BASE_URL = 'https://app-protest.herokuapp.com/test';\n\nexport const getTechTestQuestionsQuery = async () =>\n  await axios.get(`${BASE_URL}/${techTest}`);\n\nexport const getTheoryTestQuestionsQuery = async () =>\n  await axios.get(`${BASE_URL}/${theoryTest}`);\n","// extracted by mini-css-extract-plugin\nexport default {\"testSection\":\"TestView_testSection__Qblir\",\"container\":\"TestView_container__4RjQf\"};","// extracted by mini-css-extract-plugin\nexport default {\"question\":\"TestQuestion_question__A47od\",\"line\":\"TestQuestion_line__Xql2g\",\"optionsList\":\"TestQuestion_optionsList__t5smq\",\"option\":\"TestQuestion_option__hYK4K\"};","import { createTheme } from '@material-ui/core/styles';\n\nexport const formControlTheme = createTheme({\n  components: {\n    MuiFormControlLabel: {\n      styleOverrides: {\n        root: {\n          marginRight: 0,\n          marginLeft: 0,\n        },\n\n        label: {\n          fontFamily: 'Montserrat',\n          fontSize: '10px',\n          fontWeight: '500',\n          lineHeight: '1.2',\n          letterSpacing: '0.02em',\n\n          '@media (min-width: 768px)': {\n            fontSize: '16px',\n            lineHeight: '1.19',\n          },\n        },\n      },\n    },\n    MuiRadio: {\n      styleOverrides: {\n        root: {\n          padding: 0,\n        },\n      },\n    },\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"RadioButton_radio__BJ78c\",\"radioChecked\":\"RadioButton_radioChecked__5eRIF\"};","import s from './RadioButton.module.css';\n\nconst RadioButton = ({ checked }) => {\n  return !checked ? (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 40 40\"\n      fontSize=\"38px\"\n      className={s.radio}\n    >\n      <circle cx=\"50%\" cy=\"50%\" r=\"18px\" strokeWidth=\"1px\" fill=\"none\" />\n    </svg>\n  ) : (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 40 40\"\n      fontSize=\"38px\"\n      className={s.radioChecked}\n    >\n      <circle\n        cx=\"50%\"\n        cy=\"50%\"\n        r=\"10px\"\n        stroke=\"#ff6b09\"\n        strokeWidth=\"1px\"\n        fill=\"#ff6b09\"\n      />\n      <circle cx=\"50%\" cy=\"50%\" r=\"18px\" strokeWidth=\"1px\" fill=\"none\" />\n    </svg>\n  );\n};\n\nexport default RadioButton;\n","import FormLabel from '@mui/material/FormLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport s from './TestQuestion.module.css';\nimport { ThemeProvider } from '@mui/material';\nimport { formControlTheme } from 'utils/customFormThemes';\nimport RadioButton from 'components/RadioButton';\n\nexport default function TestQuestion({\n  question,\n  chosenAnswer,\n  setChosenAnswer,\n}) {\n  return (\n    <>\n      <FormLabel id={question.questionId} className={s.question}>\n        {question.question}\n      </FormLabel>\n      <div className={s.line}></div>\n      <RadioGroup className={s.optionsList}>\n        {question.answers.map((answer, index) => (\n          <ThemeProvider theme={formControlTheme} key={index}>\n            <FormControlLabel\n              className={s.option}\n              key={index}\n              checked={chosenAnswer?.option === answer ? true : false}\n              onClick={() =>\n                setChosenAnswer({ id: question.questionId, option: answer })\n              }\n              value={answer}\n              control={\n                <Radio\n                  icon={<RadioButton />}\n                  checkedIcon={<RadioButton checked />}\n                  style={{ marginRight: '20px' }}\n                />\n              }\n              label={answer}\n            />\n          </ThemeProvider>\n        ))}\n      </RadioGroup>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TestForm_form__2YrO0\",\"questionCard\":\"TestForm_questionCard__TzliR\",\"questionNumber\":\"TestForm_questionNumber__FFdOt\",\"currentQuestionNumber\":\"TestForm_currentQuestionNumber__fj5xC\",\"btnController\":\"TestForm_btnController__81yFa\",\"btn\":\"TestForm_btn__0wTAt\",\"btnPrevEnabled\":\"TestForm_btnPrevEnabled__+QvOy TestForm_btn__0wTAt\",\"btnPrevDisabled\":\"TestForm_btnPrevDisabled__EQTxm TestForm_btn__0wTAt\",\"btnPrevIcon\":\"TestForm_btnPrevIcon__owKWI\",\"btnNext\":\"TestForm_btnNext__8Lxmc TestForm_btn__0wTAt\",\"btnNextDisabled\":\"TestForm_btnNextDisabled__pxGGK TestForm_btnPrevDisabled__EQTxm TestForm_btn__0wTAt\",\"btnNextIcon\":\"TestForm_btnNextIcon__aelsH\",\"btnNextDesc\":\"TestForm_btnNextDesc__3dMDQ TestForm_btnDesc__xuPuL\",\"btnPrevDesc\":\"TestForm_btnPrevDesc__AxlgY TestForm_btnDesc__xuPuL\",\"btnSubmit\":\"TestForm_btnSubmit__qxG6E TestForm_btnPrevEnabled__+QvOy TestForm_btn__0wTAt\",\"btnSubmitDisabled\":\"TestForm_btnSubmitDisabled__RwGB1 TestForm_btnPrevDisabled__EQTxm TestForm_btn__0wTAt\",\"btnDesc\":\"TestForm_btnDesc__xuPuL\"};","import FormControl from '@mui/material/FormControl';\n\nimport TestQuestion from 'components/TestQuestion';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addAnswer } from 'redux/answers/answersSlice';\nimport s from './TestForm.module.css';\nimport routes from '../../utils/router';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { answersSelector } from 'redux/answers/answersSelectors';\nimport Icon from 'utils/Icon';\n\nexport default function TestForm({ questions }) {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useLocalStorage(\n    'currentQIndex',\n    0\n  );\n  const [chosenAnswer, setChosenAnswer] = useLocalStorage('chosenAnswer', null);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const allGivenAnswers = useSelector(answersSelector);\n\n  function decrementIndex() {\n    if (currentQuestionIndex === 0) {\n      return;\n    }\n    const newIndex = currentQuestionIndex - 1;\n    findAnswerAtStore(newIndex);\n    setCurrentQuestionIndex(newIndex);\n    addNewAnswer();\n  }\n\n  function incrementIndex() {\n    if (currentQuestionIndex === 11) {\n      return;\n    }\n    const newIndex = currentQuestionIndex + 1;\n    findAnswerAtStore(newIndex);\n    setCurrentQuestionIndex(newIndex);\n    addNewAnswer();\n  }\n\n  function addNewAnswer() {\n    if (chosenAnswer) {\n      dispatch(addAnswer(chosenAnswer));\n    }\n  }\n\n  function findAnswerAtStore(index) {\n    const id = questions[index].questionId;\n\n    for (const answer of allGivenAnswers) {\n      if (answer?.id === id) {\n        setChosenAnswer({ id: id, option: answer?.option });\n        return;\n      }\n    }\n    setChosenAnswer(null);\n  }\n\n  function handleSubmitAnswers() {\n    addNewAnswer();\n    localStorage.setItem('questions', null);\n    localStorage.setItem('chosenAnswer', null);\n    localStorage.setItem('currentQIndex', 0);\n    navigate(routes.results, { replace: true });\n  }\n\n  return (\n    <>\n      <div className={s.questionCard}>\n        <p className={s.questionNumber}>\n          Question{' '}\n          <span className={s.currentQuestionNumber}>\n            {currentQuestionIndex + 1}\n          </span>{' '}\n          / 12\n        </p>\n        <FormControl className={s.form}>\n          {questions && (\n            <TestQuestion\n              question={questions[currentQuestionIndex]}\n              chosenAnswer={chosenAnswer}\n              setChosenAnswer={setChosenAnswer}\n            />\n          )}\n        </FormControl>\n      </div>\n\n      <div className={s.btnController}>\n        <button\n          type=\"button\"\n          className={\n            currentQuestionIndex === 0 ? s.btnPrevDisabled : s.btnPrevEnabled\n          }\n          onClick={decrementIndex}\n          disabled={currentQuestionIndex === 0 ? true : false}\n        >\n          <Icon\n            width={24}\n            height={24}\n            name=\"arrow-left\"\n            className={s.btnPrevIcon}\n          />\n          <span className={s.btnPrevDesc}>Previous question</span>\n        </button>\n\n        {currentQuestionIndex < 11 ? (\n          <button\n            type=\"button\"\n            className={!chosenAnswer ? s.btnNextDisabled : s.btnNext}\n            onClick={incrementIndex}\n            disabled={!chosenAnswer ? true : false}\n          >\n            <span className={s.btnNextDesc}>Next question</span>\n\n            <Icon\n              width={24}\n              height={24}\n              name=\"arrow\"\n              className={s.btnNextIcon}\n            />\n          </button>\n        ) : null}\n\n        {currentQuestionIndex === 11 ? (\n          <button\n            type=\"submit\"\n            className={!chosenAnswer ? s.btnSubmitDisabled : s.btnSubmit}\n            disabled={!chosenAnswer ? true : false}\n            onClick={handleSubmitAnswers}\n          >\n            Send Answers\n          </button>\n        ) : null}\n      </div>\n    </>\n  );\n}\n","import TestHeader from 'components/TestHeader';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { testTypeSelector } from 'redux/testType/testTypeSelector';\n\nimport {\n  getTechTestQuestionsQuery,\n  getTheoryTestQuestionsQuery,\n} from 'services/testAPI';\nimport s from './TestView.module.css';\nimport { techTest } from 'utils/constants';\nimport TestForm from 'components/TestForm';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nexport default function TestView() {\n  const testType = useSelector(testTypeSelector);\n  const [testQuestions, setTestQuestions] = useLocalStorage('questions', null);\n\n  useEffect(() => {\n    if (!testType) return;\n    if (testQuestions) return;\n\n    if (testType === techTest) {\n      getTechTestQuestionsQuery()\n        .then(data => setTestQuestions(data.data.testData))\n        .catch(err => console.log(err));\n    } else {\n      getTheoryTestQuestionsQuery()\n        .then(data => setTestQuestions(data.data.testData))\n        .catch(err => console.log(err));\n    }\n  }, [setTestQuestions, testQuestions, testType]);\n\n  return (\n    <section className={s.testSection}>\n      <div className={s.container}>\n        <TestHeader testType={testType} />\n        <TestForm questions={testQuestions} />\n      </div>\n    </section>\n  );\n}\n"],"names":["answersSelector","state","answers","testTypeSelector","testType","home","path","TestHeader","useSelector","dispatch","useDispatch","navigate","useNavigate","className","s","split","map","char","index","toUpperCase","join","type","onClick","resetAnswers","resetTestType","localStorage","setItem","replace","BASE_URL","getTechTestQuestionsQuery","axios","techTest","getTheoryTestQuestionsQuery","theoryTest","formControlTheme","createTheme","components","MuiFormControlLabel","styleOverrides","root","marginRight","marginLeft","label","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","MuiRadio","padding","checked","width","height","viewBox","cx","cy","r","stroke","strokeWidth","fill","TestQuestion","question","chosenAnswer","setChosenAnswer","FormLabel","id","questionId","RadioGroup","answer","ThemeProvider","theme","FormControlLabel","option","value","control","Radio","icon","checkedIcon","style","TestForm","questions","useLocalStorage","currentQuestionIndex","setCurrentQuestionIndex","allGivenAnswers","addNewAnswer","addAnswer","findAnswerAtStore","FormControl","newIndex","disabled","Icon","name","routes","TestView","testQuestions","setTestQuestions","useEffect","then","data","testData","catch","err","console","log"],"sourceRoot":""}